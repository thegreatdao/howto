/**
 * Generated by Gas3 v2.1.0 (Granite Data Services).
 * HL
 * WARNING: DO NOT CHANGE THIS FILE. IT MAY BE OVERWRITTEN EACH TIME YOU USE
 * THE GENERATOR. INSTEAD, EDIT THE INHERITED CLASS (User.as).
 */

package training.hl.bean {

    import flash.utils.IDataInput;
    import flash.utils.IDataOutput;
    
    import mx.collections.ArrayCollection;
    import mx.collections.ListCollectionView;
    
    import org.granite.collections.IPersistentCollection;
    import org.granite.meta;
    import org.granite.util.Enum;
    
    import training.hl.bean.enums.Gender;

    use namespace meta;

    [Bindable]
    public class UserBase extends RootEntity {

        private var __initialized:Boolean = true;
        private var __detachedState:String = null;

        private var _age:Number;
        private var _categories:ListCollectionView;
        private var _createdDate:Date;
        private var _firstName:String;
        private var _gender:Gender;
        private var _id:Number;
        private var _lastName:String;
        private var _password:String;
        private var _posts:ListCollectionView;
        private var _profile:Profile;
        private var _roles:ArrayCollection;
        private var _userName:String;

        meta function isInitialized(name:String = null):Boolean {
            if (!name)
                return __initialized;

            var property:* = this[name];
            return (
                (!(property is User) || (property as User).meta::isInitialized()) &&
                (!(property is IPersistentCollection) || (property as IPersistentCollection).isInitialized())
            );
        }

        public function set age(value:Number):void {
            _age = value;
        }
        public function get age():Number {
            return _age;
        }

        public function set categories(value:ListCollectionView):void {
            _categories = value;
        }
        public function get categories():ListCollectionView {
            return _categories;
        }

        public function set createdDate(value:Date):void {
            _createdDate = value;
        }
        public function get createdDate():Date {
            return _createdDate;
        }

        public function set firstName(value:String):void {
            _firstName = value;
        }
        public function get firstName():String {
            return _firstName;
        }

        public function set gender(value:Gender):void {
            _gender = value;
        }
        public function get gender():Gender {
            return _gender;
        }

        public function set id(value:Number):void {
            _id = value;
        }
        public function get id():Number {
            return _id;
        }

        public function set lastName(value:String):void {
            _lastName = value;
        }
        public function get lastName():String {
            return _lastName;
        }

        public function set password(value:String):void {
            _password = value;
        }
        public function get password():String {
            return _password;
        }

        public function set posts(value:ListCollectionView):void {
            _posts = value;
        }
        public function get posts():ListCollectionView {
            return _posts;
        }

        public function set profile(value:Profile):void {
            _profile = value;
        }
        public function get profile():Profile {
            return _profile;
        }

        public function set roles(value:ArrayCollection):void {
            _roles = value;
        }
        public function get roles():ArrayCollection {
            return _roles;
        }

        public function set userName(value:String):void {
            _userName = value;
        }
        public function get userName():String {
            return _userName;
        }

        public function readExternal(input:IDataInput):void {
            __initialized = input.readObject() as Boolean;
            __detachedState = input.readObject() as String;
            if (meta::isInitialized()) {
                _age = function(o:*):Number { return (o is Number ? o as Number : Number.NaN) } (input.readObject());
                _categories = input.readObject() as ListCollectionView;
                _createdDate = input.readObject() as Date;
                _firstName = input.readObject() as String;
                _gender = Enum.readEnum(input) as Gender;
                _id = function(o:*):Number { return (o is Number ? o as Number : Number.NaN) } (input.readObject());
                _lastName = input.readObject() as String;
                _password = input.readObject() as String;
                _posts = input.readObject() as ListCollectionView;
                _profile = input.readObject() as Profile;
                _roles = input.readObject() as ArrayCollection;
                _userName = input.readObject() as String;
            }
            else {
                _id = function(o:*):Number { return (o is Number ? o as Number : Number.NaN) } (input.readObject());
            }
        }

        public function writeExternal(output:IDataOutput):void {
            output.writeObject(__initialized);
            output.writeObject(__detachedState);
            if (meta::isInitialized()) {
                output.writeObject(_age);
                output.writeObject(_categories);
                output.writeObject(_createdDate);
                output.writeObject(_firstName);
                output.writeObject(_gender);
                output.writeObject(_id);
                output.writeObject(_lastName);
                output.writeObject(_password);
                output.writeObject(_posts);
                output.writeObject(_profile);
                output.writeObject(_roles);
                output.writeObject(_userName);
            }
            else {
                output.writeObject(_id);
            }
        }
    }
}