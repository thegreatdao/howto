<?xml version="1.0" encoding="UTF-8"?>
<beans:beans xmlns="http://www.springframework.org/schema/security"
	xmlns:beans="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xsi:schemaLocation="
		http://www.springframework.org/schema/beans
		http://www.springframework.org/schema/beans/spring-beans-3.0.xsd
        http://www.springframework.org/schema/security
        http://www.springframework.org/schema/security/spring-security-3.0.xsd
        ">

	<global-method-security pre-post-annotations="enabled">
		<!--
			AspectJ pointcut expression that locates our "post" method and
			applies security that way <protect-pointcut expression="execution(*
			bigbank.*Service.post*(..))" access="ROLE_TELLER"/>
		-->
	</global-method-security>

	<http use-expressions="true">
		<intercept-url pattern="/**/form.html" access="hasRole('ROLE_ADMIN')" />
		<intercept-url pattern="/secure/**" access="isAuthenticated()" />
		<!--
			Disable web URI authorization, as we're using
			<global-method-security> and have @Secured the services layer instead
			<intercept-url pattern="/listAccounts.html" access="isRememberMe()"
			/> <intercept-url pattern="/post.html"
			access="hasRole('ROLE_TELLER')" />
		-->
		<intercept-url pattern="/**" access="permitAll" />
		<form-login login-page="/index.html" />
		<logout />
		<remember-me />
		<!--
			Uncomment to enable X509 client authentication support <x509 />
		-->
		<!-- Uncomment to limit the number of sessions a user can have -->
		<!--<session-management invalid-session-url="/timeout.jsp">
			<concurrency-control max-sessions="1"
				error-if-maximum-exceeded="true" />
		</session-management>

	--></http>

	<authentication-manager>
		<authentication-provider>
			<password-encoder hash="sha-256" />
			<jdbc-user-service data-source-ref="dataSource"
	    		users-by-username-query="select user_name as username, password,true from user where user_name = ?"
	    		authorities-by-username-query="select u.user_name as username, r.name as authority from user u inner join user_role ur on u.id = ur.user_id inner join role r on r.id = ur.role_id where u.user_name = ?"/>
		</authentication-provider>
	</authentication-manager>

</beans:beans>
